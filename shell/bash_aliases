## Personal bash command Directory
### PS1
PS1="\[\033[1;32m\]\342\224\214($(if [[ ${EUID} == 0 ]]; then echo '\[\033[01;31m\]\h'; else echo '\[\033[01;35m\]\u@\h';fi)\[\033[1;32m\])\342\224\200(\[\033[1;31m\]\$?\[\033[1;32m\])\342\224\200(\[\033[1;36m\]\@ \d\[\033[1;32m\])\n\342\224\224[\[\033[1;33m\]\w\[\033[1;32m\]]\342\224\200\[\033[1;31m\]|> \[\033[0m\]"
#PS1="\[\033[1;32m\]\342\224\214($(if [[ ${EUID} == 0 ]]; then echo '\[\033[01;31m\]\h'; else echo '\[\033[01;35m\]\u@\h';fi)\[\033[1;32m\])\342\224\200(\[\033[1;31m\]\$?\[\033[1;32m\])\342\224\200(\[\033[1;36m\]\@ \d\[\033[1;32m\])\n\342\224\224\342\224\200[\[\033[1;33m\]\w\[\033[1;32m\]]\342\224\200\[\033[1;31m\]|> \[\033[0m\]"
#### Personal PATH
export PATH=$PATH:$HOME/bin:$HOME/bin/bash
export PATH=$PATH:/usr/local/bin
#export CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:/usr/local/Qt/5.3/clang_64/include
#export C_INCLUDE_PATH=$C_INCLUDE_PATH:/usr/local/Qt/5.3/clang_64/include
#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/Qt/5.3/clang_64/lib
# Command Aliases
alias sb='sudo reboot'
alias c='clear'
alias e='exit'
if [[ `uname` == "Darwin" ]]; then
	alias ls='ls -G'
else
	alias ls='ls --color=auto -G'
fi
#tinyscheme
alias ..='cd ..'
alias ...='cd ../..'
alias ts='scheme'
alias sl='ls'
alias l='ls'
alias ll='ls -lh'
alias la='ls -A'
alias gp='gnuplot'
alias g++='g++ -std=c++11 -O2 -Wall'
alias clang++='clang++ -O2 -Wall'
alias md='mkdir -p'
alias rd='rmdir'
alias rm='rm -i'
alias mr='rm -i'
alias lla='ls -lhA'
alias iconvf='iconv -f gb18030 -t utf8'
alias lunart='lunar -h -b --utf8'
alias lunarf='lunar -h -b -i --utf8'
alias axels='axel -n 30 -o '
alias vi='vim'
alias vimrc='vi ~/.vimrc'
alias vibash='vi ~/.bash_aliases'
alias make='make -j4'
alias octave='octave --silent'
alias qs='ps -ef|grep -v grep|grep'
####### xelatex ############
alias rmtex='rm -rf *.aux *.lof *.lot *.out *.toc *.synctex.gz* *.log *-inc.eps'
####### git aliases ########
alias gita='git add -f --all * && git commit -a -m'
alias gitp='git push origin master'
################ Mac ########################
if [[ `uname` == "Darwin" ]]; then
	alias show='defaults write com.apple.finder AppleShowAllFiles -bool true'
	alias hide='defaults write com.apple.finder AppleShowAllFiles -bool false'
	alias updatedb='sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist'
######### Wi-Fi ############
	if [[ -e ~/.socksrc ]]; then
		source ~/.socksrc
	fi
	function v4off(){
		sudo networksetup -setv4off Wi-Fi
		sudo networksetup -setdnsservers Wi-Fi 2001:4860:4860::8888 8.8.8.8
		ssh -6 -N -D 7070  darkshell 1>/dev/null &
		sudo networksetup -setsocksfirewallproxystate Wi-Fi on
		sudo networksetup -setsocksfirewallproxy Wi-Fi localhost 7070
	}
	function v4on(){
		sudo networksetup -setdhcp Wi-Fi
		sudo networksetup -setdnsservers Wi-Fi Empty
		sudo networksetup -setsocksfirewallproxystate Wi-Fi off
	}
########### ftp ############
	alias ftpon='sudo -s launchctl load -w /System/Library/LaunchDaemons/ftp.plist'
	alias ftpoff='sudo -s launchctl unload -w /System/Library/LaunchDaemons/ftp.plist'
########## MySQL ###########
	alias mysql='/usr/local/mysql/bin/mysql'
	alias mysqladmin='/usr/local/mysql/bin/mysqladmin'
########### PATH ###########
	### QT 5.3
	export PATH=$PATH:/usr/local/Qt/5.3/clang_64/bin
	export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/Qt/5.3/clang_64/lib/pkgconfig
	### if having python3.4
#	export PATH=/Library/Frameworks/Python.framework/Versions/3.4/bin:$PATH
	### qtgrace
	if [[ -d /Applications/QMBF.app/ ]]; then
		export PATH=$PATH:/Applications/QMBF.app/Contents/MacOS
	fi
	### if having cmake.app
	export PATH=$PATH:/Applications/CMake.app/Contents/bin
############################
fi
############ Personal Functions ############
# This script file is for converting gb18030 files to utf-8 files in batches
function gb2utf(){
	set -o nounset
	dir=$1
	if [ $dir == "" ]; then
		echo "Usage: "
		echo "        g2u directory"
		echo "    This is a script file to convert gb18030 files to utf-8 files in batches. "
		return
	fi
	if [ -d $dir ]; then
		mkdir -p $dir/original/
		cd $dir
		for name in *.txt; do
			tmp=utf-`basename "$name"`
			iconv -f gb18030 -t utf-8 "$name" >"$tmp"
			mv "$name" original/"$name"
			mv "${tmp}" "$name"
		done
	else
		echo "Directory Doesn't Exist!!! Check the directory you input, ^<>^ !!!"
		return
	fi
	cd ..
}
function g2u(){
	if [[ $# -ne 2 ]]; then
		echo "g2u input output"
		return
	fi
	input=$1
	output=$2
	iconv -f gb18030 -t utf-8 "$input" > "$output"
}
###---------------------------------------------------###
if [[ -e ~/.testrc ]]; then
	source ~/.testrc
fi

###---------------------------------------------------###
# xqcd and x settings
if [[ -x $HOME/Bin/xqcd/x/bin/xqcdio.calc ]]; then
	export xpath="$HOME/Bin/xqcd/x/"
	export PATH=$PATH:$HOME/Bin/xqcd/x/bin
fi
[[ -f /usr/local/etc/profile.d/bash_completion.sh ]] && source /usr/local/etc/profile.d/bash_completion.sh
